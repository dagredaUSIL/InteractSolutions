```
import com.interact.sas.web.zk.dms.util.DocumentManagerUtilities;
import com.interact.sas.web.zk.cmn.util.FileUtilities;
import java.sql.Timestamp;
import com.interact.sas.cmn.ConfigurationManager;
import com.interact.sas.dms.data.Document;
import com.interact.sas.api.bpm.ProcessInstanceDocumentFiller;
import com.interact.sas.bpm.data.ProcessInstance;
import com.interact.sas.dms.db.DocumentManager;
import com.interact.sas.dms.data.DocumentFolder;
import com.interact.sas.web.zk.cmn.ApplicationContext;
import com.interact.sas.web.zk.cmn.util.ProtocolHelper;

import java.text.*;

Format formatter;
formatter = new SimpleDateFormat( "dd/MM/yyyy" );

a = SA.access( "attribute" );
a.attach(CONTEXT.getAttribute( "@serial" ));

pi = CONTEXT.getProcessInstance();

serial = pi.getSerial();
name = CONTEXT.getAttribute("tipoPropostaScript");

dm = com.interact.sas.dms.ModuleContext
	.getInstance()
	.getDocumentManager();


client = CONTEXT.getAttribute( "NomeCliente" );
childFolderName = serial + "-" + name;

dm = com.interact.sas.dms.ModuleContext.getInstance().getDocumentManager();

	if(!client.equals("Interact"))
	{
				//pega a pasta pai no SA-DM
				idCliente = CONTEXT.getAttribute("idClient");
				print(idCliente);

				account = SA.fetch1("crm:account","SELECT \n" +
								 "      map.ref_source \n" +
								 "from cmn_tag_mappings\n" +
								 "map join cmn_tag_kinds kind on (map.ref_kind = kind.id)join\n" +
								 "cmn_tag_families family on (kind.ref_family = family.id)\n" +
								 "where kind.mnemonic = 'CANAIS.CRM.CMN_UNITS'\n" + //alterar o nome do atributo
								 "and family.mnemonic = 'CANAIS.CRM'\n" + //alterar o nome da familia
								 "and map.type = 1000\n" +
								 "and map.content =  '" + idCliente + "'");


				idAccount = account.getId();

				folders = SA.fetch1("dms:folder", "select \n" + 
										"map.ref_source from cmn_tag_mappings \n" + 
										"map  join cmn_tag_kinds kind \n" + 
										"join cmn_tag_families family on (kind.ref_family = family.id)\n" + 
										"where kind.mnemonic = 'CANAIS.CRM.CONTA'\n" + 
										"and family.mnemonic = 'account'\n" + 
										"and map.type = 200\n" + 
										"and map.content =  '" + idAccount + "'");

				folder = folders.getId();
				print(folder);
				//Pega a pastas definidas
				parentFolder = dm.getFolder( folder );

				folder = dm.getFolderByName( "Propostas", parentFolder.getId());
				print(folder.getId());
				
				folder_2 = dm.getFolderByName( "Capacitação", folder.getId());

				print(folder_2.getId());

				childFolder = dm.getFolderByName( childFolderName, folder_2.getId() );
				
		

					//caso a pasta n exista, cria a pasta da intância 
					if ( childFolder == null ) 
					{
						childFolder = new DocumentFolder( childFolderName );
						dm.addFolder( folder_2, childFolder );
						
					}
	print(childFolder);

}

categoryID = 139;

folderId = CONTEXT.getAttribute("idPastaDM");
cliente = CONTEXT.getAttribute( "NomeCliente" );

category = dm.getCategory( categoryID );

docName = serial + " - " + cliente;
autor = SA.user();

if( !a.value( "codigoProposta" ).isEmpty() )
{
	proposta = dm.getDocumentByCode( a.value( "codigoProposta" ) );
}
else
{
	proposta = null;	
}

propostaVersion = 1;

document = new com.interact.sas.dms.data.Document();

if( proposta != null )
{
	propostaVersion += Integer.parseInt( proposta.getVersion() );
	serialDoc = proposta.getCode();
	proposta.setState( Document.STATE_ARCHIVED );

	dm.updateDocument( proposta );
}
else
{
	serialDoc = com.interact.sas.cmn.ModuleContext
		.getInstance()
		.getSerialNumberManager()
		.generateSerialNumber( category.getSerialId() );
}

document.setFolder( childFolder.getId() );
document.setVersion( ConfigurationManager.getInstance().getProperty( "DocumentEditor.defaultVersion", propostaVersion.toString() ) );
document.setMedium( Document.MEDIUM_REPOSITORY );
document.setState( Document.STATE_ELABORATING );
document.setConversion( Document.CONVERSION_PDF );
document.setCreationDate( SA.today() );
document.setName( docName );
document.setCode( serialDoc );
document.setCategoryId( categoryID );
document.setOwnerId( autor.getId() );
document.setType( "PDF" );

a.value( "codigoProposta", serialDoc );


file = a.object( "propostaPDF" );

form = new ProcessInstanceDocumentFiller( pi );  

form.setTemplate( file );

	
form.setLabelFont( new Font("Arial", Font.PLAIN, 10 ) );

form.renderLabel( serialDoc + " v0" + propostaVersion.toString(), 1, 65, 53 );

form.setLabelFont( new Font("Arial", Font.BOLD, 10 ) );

form.renderLabel( serialDoc + " v0" + propostaVersion.toString(), 3, 92, 64);
form.saveToAttribute( "propostaPDF" );

file = a.object( "propostaPDF" );

dm.insertDocument( document );
dm.importFile( autor, file, document );
dm.createElaborationEvents( document, null, autor, null );

de = DocumentManagerUtilities.getNextElaborationEvent( document );

currentDate = SA.today();
todayTimestamp = new Timestamp( currentDate.getTime() );
de.setOcurredDate( todayTimestamp );
dm.updateDocumentEvent( de );

file = dm.getLocalPath( document, dm.getStorageTypeToOpen( document ) );
md5 = FileUtilities.generateMD5( file );

if( proposta != null )
{
	document.setWork( proposta.getWork() );
}

a.value( "Proposta", "sas:dms:id_work:" + document.getWork() );
document.setSignature( md5 );
dm.updateDocument( document );

try
{
	DocumentManagerUtilities.publishDocument( null, document, file, 0, autor );
}
catch( Exception e )
{
	print(e);
}

```